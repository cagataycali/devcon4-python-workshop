from web3.auto.infura.ropsten import w3
block = w3.eth.getBlock(4281234)
block.hash
from web3 import Account
from web3.auto.infura.ropsten import w3
block = w3.eth.getBlock(4281234)
block.hash
acct = Account.privateKeyToAccount("")
acct = Account.privateKeyToAccount("0x82744fb9d57cbd4018522711c3892f0f59ab6bee5acf2019650df903103a432b")
acct.address
balance = w3.eth.getBalance(acct.address)
w3.fromWei(balance, "ether")
bytecode = '''
{
	"linkReferences": {},
	"object": "608060405234801561001057600080fd5b506040516020806102ec8339810160405251610035338264010000000061003b810204565b506100ad565b600160a060020a038216151561005057600080fd5b6001805482019055600160a060020a038216600081815260208181526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050565b610230806100bc6000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60015490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6000610130338484610139565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481111561016b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561018d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff80841660008181526020818152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050505600a165627a7a72305820190d5c8fb45d964bcb3ac3d8f7ed0bbf4dc1e9a43454d45b3a79b1c6c51da5890029",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x2EC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE MLOAD PUSH2 0x35 CALLER DUP3 PUSH5 0x100000000 PUSH2 0x3B DUP2 MUL DIV JUMP JUMPDEST POP PUSH2 0xAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x230 DUP1 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x18160DDD DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130 CALLER DUP5 DUP5 PUSH2 0x139 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP4 DUP7 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NOT 0xd 0x5c DUP16 0xb4 0x5d SWAP7 0x4b 0xcb GASPRICE 0xc3 0xd8 0xf7 0xed SIGNEXTEND 0xbf 0x4d 0xc1 0xe9 LOG4 CALLVALUE SLOAD 0xd4 JUMPDEST GASPRICE PUSH26 0xB1C6C51DA5890029000000000000000000000000000000000000 ",
	"sourceMap": "162:2134:0:-;;;465:85;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:85:0;;;;;;;;;;;;;514:31;520:10;465:85;514:5;;;;:31;:::i;:::-;465:85;162:2134;;2065:229;-1:-1:-1;;;;;2135:12:0;;;;2127:21;;;;;;2169:12;;;:20;;2154:35;;-1:-1:-1;;;;;2216:18:0;;-1:-1:-1;2216:18:0;;;;;;;;;;;;;:26;;2195:47;;2253:36;;;;;;;;;;;;;;;;;;2065:229;;:::o;162:2134::-;;;;;;;"
}'''
token_code = bytecode['object']
bytecode = {
	"linkReferences": {},
	"object": "608060405234801561001057600080fd5b506040516020806102ec8339810160405251610035338264010000000061003b810204565b506100ad565b600160a060020a038216151561005057600080fd5b6001805482019055600160a060020a038216600081815260208181526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050565b610230806100bc6000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60015490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6000610130338484610139565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481111561016b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216151561018d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff80841660008181526020818152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050505600a165627a7a72305820190d5c8fb45d964bcb3ac3d8f7ed0bbf4dc1e9a43454d45b3a79b1c6c51da5890029",
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x2EC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE MLOAD PUSH2 0x35 CALLER DUP3 PUSH5 0x100000000 PUSH2 0x3B DUP2 MUL DIV JUMP JUMPDEST POP PUSH2 0xAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x230 DUP1 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x18160DDD DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH2 0xFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130 CALLER DUP5 DUP5 PUSH2 0x139 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP4 DUP7 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 NOT 0xd 0x5c DUP16 0xb4 0x5d SWAP7 0x4b 0xcb GASPRICE 0xc3 0xd8 0xf7 0xed SIGNEXTEND 0xbf 0x4d 0xc1 0xe9 LOG4 CALLVALUE SLOAD 0xd4 JUMPDEST GASPRICE PUSH26 0xB1C6C51DA5890029000000000000000000000000000000000000 ",
	"sourceMap": "162:2134:0:-;;;465:85;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:85:0;;;;;;;;;;;;;514:31;520:10;465:85;514:5;;;;:31;:::i;:::-;465:85;162:2134;;2065:229;-1:-1:-1;;;;;2135:12:0;;;;2127:21;;;;;;2169:12;;;:20;;2154:35;;-1:-1:-1;;;;;2216:18:0;;-1:-1:-1;2216:18:0;;;;;;;;;;;;;:26;;2195:47;;2253:36;;;;;;;;;;;;;;;;;;2065:229;;:::o;162:2134::-;;;;;;;"
}
token_code = bytecode['object']
token_abi = '''
[
	{
		"constant": true,
		"inputs": [],
		"name": "totalSupply",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "owner",
				"type": "address"
			}
		],
		"name": "balanceOf",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "to",
				"type": "address"
			},
			{
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "transfer",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"name": "startBalance",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"name": "from",
				"type": "address"
			},
			{
				"indexed": true,
				"name": "to",
				"type": "address"
			},
			{
				"indexed": false,
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Transfer",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"name": "owner",
				"type": "address"
			},
			{
				"indexed": true,
				"name": "spender",
				"type": "address"
			},
			{
				"indexed": false,
				"name": "value",
				"type": "uint256"
			}
		],
		"name": "Approval",
		"type": "event"
	}
]
'''
token_abi = token_abi.strip()
token_abi
token_deployer = w3.eth.contract(abi=token_abi, bytecode=token_code)
init = token_deployer.constructor(1000)
basic_txn = init.buildTransaction({'gas': 320000})
next_nonce = w3.eth.getTransactionCount(acct.address)
signable_transation = dict()
signable_transation = dict(basic_txn, nonce=next_nonce, gasPrice=w3.toWei(3, 'gwei'))

signable_transaction = dict(basic_txn, nonce=next_nonce, gasPrice=w3.toWei(3, 'gwei'))
signature_info = acct.signTransaction(signable_transaction)
txn_hash = w3.ethc.sendRawTransaction(signature_info.rawTransaction)
txn_hash = w3.eth.sendRawTransaction(signature_info.rawTransaction)
receipt = w3.eth.waitForTransactionReceipt(txn_hash)
token = w3.eth.contract(address=receipt.contractAdress, abi=token_abi)
token = w3.eth.contract(address=receipt.conctractAddress, abi=token_abi)
token = w3.eth.contract(address=receipt.contractAddress, abi=token_abi)
token.functions.balanceOf(acct.address).call()
receipt.conctractAddress
receipt.concractAddress
receipt.contractAddress
acct.address
%save current_session ~0/
import readline
readline.write_history_file('/Users/cagataycali/Desktop/devcon4-python-workshop')
readline.write_history_file('/Users/cagataycali/Desktop/devcon4-python-workshop/history.txt')
from ens import ENS
rns = ENS(w3.providers, addr="0xbaB9717617D7e50264dE6Ee0Ef152a7CA452CF9C")
rns.address('jarjar.test')
reg_addr = rns.address('test')
reg_abi = [{'inputs': [{'name': 'label', 'type': 'bytes32'}, 
   {'name': 'owner', 'type': 'address'}],
  'name': 'register', 'outputs': [], 'payable': False,
  'stateMutability': 'nonpayable', 'constant': False,
  'type': 'function'}]
reg = w3.eth.contract(address=reg_addr, abi=reg_abi)
my_hash = rns.labelhash('carvertoken')
txn = reg.functions.register(my_hash, acct.address).buildTransaction...
txn = reg.functions.register(my_hash, acct.address).buildTransaction
resolver_addr = rns.address('resolver.eth')
raw_ens = rns.ens._classic_contract
txn = raw_ens.functions.setResolver(rns.namehash('carvertoken.test'), resolver_addr).build
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
).build
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
).build
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
).build()
)
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
)
txn
resolver_abi = [{ "inputs": [[] }]
resolver_abi = [{"inputs": [
   {"name": "node", "type": "bytes32"}, {"name": "addr", "type": "address"}],
  "constant": False, "name": "setAddr", "outputs": [],
  "stateMutability": "nonpayable",
  "payable": False, "type": "function"}]


txn = resolver.functions.setAddr(namehash, token.address).buildTr
txn
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
).buildTransaction
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
).buildTransaction({ 'gas': 320000 })
txn = resolver.functions.setAddr(namehash, token.address).buildTransaction({ 'gas': 320000 })
rns.address('carvertoken.test') == token.address
my_hash = rns.labelhash('cagataytoken')
tnx = reg.functions.register(my_hash, acct.address).buildTransaction({ 'gas': 320000 })
resolver_addr = rns.address('resolver.eth')
raw_ens = rns.ens._classic_contract
txn = raw_ens.functions.setResolver(
  rns.namehash('carvertoken.test'),
  resolver_addr,
txn = raw_ens.functions.setResolver( rns.namehash('cagataytoken.test'), resolver_addr, ).buildTransaction({ 'gas': 320000})
resolver_abi = [{"inputs": [
   {"name": "node", "type": "bytes32"}, {"name": "addr", "type": "address"}],
  "constant": False, "name": "setAddr", "outputs": [],
  "stateMutability": "nonpayable",
  "payable": False, "type": "function"}]
namehash = rns.namehash('carvertoken.test')
namehash = rns.namehash('cagataytoken.test')
txn = resolver.functions.setAddr(namehash, token.address).buildTransaction({ 'gas': 320000 })
rns.address('cagataytoken.test') == token.address
readline.write_history_file('/Users/cagataycali/Desktop/devcon4-python-workshop/history.txt')
rns.address('cagataytoken.test') == token.address
my_hash = rns.labelhash('cagataytoken')
xn = reg.functions.register(my_hash, acct.address).buildTransaction({ 'gas': 320000})
txn = reg.functions.register(my_hash, acct.address).buildTransaction({ 'gas': 320000})
namehash = rns.namehash('cagataytoken.test')
txn = resolver.functions.setAddr(namehash, token.address).buildTransaction({ 'gas': 320000 })
rns.address('cagataytoken.test') == token.address
token.address
rns.address('cagataytoken.test')
rns
rns.address('jarjar.test')
rns.address('cagataytoken.test')
rns.address('carvertoken.test')
reg_addr = rns.address('test')
reg_abi = [{'inputs': [{'name': 'label', 'type': 'bytes32'}, 
   {'name': 'owner', 'type': 'address'}],
  'name': 'register', 'outputs': [], 'payable': False,
  'stateMutability': 'nonpayable', 'constant': False,
  'type': 'function'}]
reg = w3.eth.contract(address=reg_addr, abi=reg_abi)
my_hash = rns.labelhash('cagataytoken')
txn = reg.functions.register(my_hash, acct.address).buildTransaction({ 'gas': 320000 })
resolver_addr = rns.address('resolver.eth')
raw_ens = rns.ens._classic_contract
txn = raw_ens.functions.setResolver( rns.namehash('cagatayoken.test'), resolver_addr, ).buildTransaction({'gas': 320000})
resolver_abi = [{"inputs": [
   {"name": "node", "type": "bytes32"}, {"name": "addr", "type": "address"}],
  "constant": False, "name": "setAddr", "outputs": [],
  "stateMutability": "nonpayable",
  "payable": False, "type": "function"}]
resolver = w3.eth.contract(address=resolver_addr, abi=resolver_abi)
namehash = rns.namehash('cagataytoken.test')
txn = resolver.functions.setAddr(namehash, token.address).buildTransaction({'gas': 320000})
rns.address('carvertoken.test') == token.address
txn
rns.address('cagataytoken.test')
rns.address('carvertoken.test') == token.address
token.address
txn = raw_ens.functions.setResolver( rns.namehash('cagatayoken.test'), resolver_addr, ).buildTransaction({'gas': 320000})
rns.address('cagataytoken.test')

readline.write_history_file('/Users/cagataycali/Desktop/devcon4-python-workshop/history.txt')

token_deployer = w3.eth.contract(abi=token_abi, bytecode=token_code)
next_nonce = w3.eth.getTransactionCount(acct.address)
signable_transaction = dict(
  basic_txn,
  nonce=next_nonce,
  gasPrice=w3.toWei(3, 'gwei'),
)
signable_transaction = dict( txn, nonce=next_nonce, gasPrice=w3.toWei(3, 'gwei'), )
signature_info = acct.signTransaction(signable_transaction)
 txn_hash = w3.eth.sendRawTransaction(signature_info.rawTransaction)
txn_hash = w3.eth.sendRawTransaction(signature_info.rawTransaction)
rns.address('carvertoken.test') == token.address
rns.address('cagataytoken.test')
rns.address('cagataytoken.test') == token.address
readline.write_history_file('/Users/cagataycali/Desktop/devcon4-python-workshop/history.txt')
receipt = w3.eth.waitForTransactionReceipt(txn_hash)
txn = raw_ens.functions.setResolver( rns.namehash('cagatayoken.test'), resolver_addr, ).buildTransaction({'gas': 320000})
txn = reg.functions.register(my_hash, acct.address).buildTransaction({ 'gas': 320000 })
next_nonce = w3.eth.getTransactionCount(acct.address)
signable_transaction = dict( txn, nonce=next_nonce, gasPrice=w3.toWei(3, 'gwei'), )
signature_info = acct.signTransaction(signable_transaction)
txn_hash = w3.eth.sendRawTransaction(signature_info.rawTransaction)
receipt = w3.eth.waitForTransactionReceipt(txn_hash)
receipt
readline.write_history_file('/Users/cagataycali/Desktop/devcon4-python-workshop/history.txt')
